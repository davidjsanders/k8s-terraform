- name: Create Nexus data Persistent Volume
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/data-pv.yaml
    sleep 2
  when: nexus_blob_store_pv_status is failed or (force is defined and force | lower == "yes")

- name: Create Nexus blob Persistent Volume
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/blobs-pv.yaml
    sleep 2
  when: nexus_data_pv_status is failed or (force is defined and force | lower == "yes")

- name: Create Nexus user root Persistent Volume
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/user-root-pv.yaml
    sleep 2
  when: nexus_user_root_pv_status is failed or (force is defined and force | lower == "yes")

- name: Create Persistent Volume Claims
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/data-pvc.yaml
    sleep 2
  when: nexus_data_pvc_status is failed or (force is defined and force | lower == "yes")

- name: Create Persistent Volume Claims
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/blobs-pvc.yaml
    sleep 2
  when: nexus_blob_store_pvc_status is failed or (force is defined and force | lower == "yes")

- name: Create Persistent Volume Claims
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/user-root-pvc.yaml
    sleep 2
  when: nexus_user_root_pvc_status is failed or (force is defined and force | lower == "yes")

- name: Create Nexus deployment
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/deploy.yaml
  when: nexus_deploy_status is failed or (force is defined and force | lower == "yes")

- name: Create Nexus services
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/service.yaml
    sleep 2
  when: nexus_svc_status is failed or (force is defined and force | lower == "yes")

- name: Create Nexus services
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/docker-service.yaml
  when: nexus_docker_svc_status is failed or (force is defined and force | lower == "yes")

- name: Create Nexus ingress
  shell: |
    kubectl apply -f /home/{{ admin }}/k8s/nexus_oss/ingress.yaml
  when: nexus_ing_status is failed or (force is defined and force | lower == "yes")

- name: Create nexus credentials (pre-defined) in regcreds
  shell: |
    kubectl create secret docker-registry regcreds --docker-server=http://{{ registry }} --docker-username={{ nexus_username }} --docker-password="{{ nexus_password }}"
  when: docker_registry_secret.stdout == ""

- name: Wait for Nexus to become ready (for image dependencies)
  shell: |
    kubectl get pod -l app={{ item }} -o json | jq -r '.items[].status.conditions[] | select(.type=="Ready" and .status=="True")'
  register: result
  until: result.stdout.find("True") != -1
  retries: 20
  delay: 30
  with_items:
  - "nexus-oss"
